package org.roybond007.repositories;

import java.util.Optional;

import org.roybond007.model.dto.MovieInfoResponseBody;
import org.roybond007.model.dto.ReplyDataFetchResponseBody;
import org.roybond007.model.dto.ReviewDataFetchResponseBody;
import org.roybond007.model.entity.MovieEntity;
import org.roybond007.model.helper.ReplyDataFetchObject;
import org.roybond007.model.helper.ReviewDataFetchObject;
import org.springframework.data.mongodb.repository.Aggregation;
import org.springframework.data.mongodb.repository.Meta;
import org.springframework.data.mongodb.repository.MongoRepository;
import org.springframework.data.repository.PagingAndSortingRepository;
import org.springframework.lang.Nullable;
import org.springframework.stereotype.Repository;

@Repository
public interface MovieEntityRepository
		extends MongoRepository<MovieEntity, String>, MovieEntityRepositoryCustom{
	
	@Meta(allowDiskUse = true)
	@Aggregation(pipeline = {
			"{\r\n"
			+ "    $match: {\r\n"
			+ "      _id: ?0\r\n"
			+ "    }\r\n"
			+ "  }",
			"{\r\n"
			+ "    $project: {\r\n"
			+ "      _id: 1,\r\n"
			+ "      title: 1,\r\n"
			+ "      description: 1,\r\n"
			+ "      genres: 1,\r\n"
			+ "      posterLink: 1,\r\n"
			+ "      trailerLink: 1,\r\n"
			+ "      avgRating: 1,\r\n"
			+ "      timestamp: 1,\r\n"
			+ "      noOfRatings: 1,\r\n"
			+ "      rating: {\r\n"
			+ "        $first: {\r\n"
			+ "          $filter: {\r\n"
			+ "            input: \"$ratingList\",\r\n"
			+ "            as: \"rating\",\r\n"
			+ "            cond: {\r\n"
			+ "              $eq: [\"$$rating._id\", ?1]\r\n"
			+ "            }\r\n"
			+ "          }\r\n"
			+ "        }\r\n"
			+ "      } \r\n"
			+ "    }\r\n"
			+ "  }",
			"{\r\n"
			+ "    $project: {\r\n"
			+ "      _id: 1,\r\n"
			+ "      title: 1,\r\n"
			+ "      description: 1,\r\n"
			+ "      genres: 1,\r\n"
			+ "      posterLink: 1,\r\n"
			+ "      trailerLink: 1,\r\n"
			+ "      avgRating: 1,\r\n"
			+ "      timestamp: 1,\r\n"
			+ "      noOfRatings: 1,\r\n"
			+ "      userRating: {\r\n"
			+ "        $ifNull: [\"$rating.rating\", 0]\r\n"
			+ "      }\r\n"
			+ "    }\r\n"
			+ "  }"
	})
	Optional<MovieInfoResponseBody> findMovieInfo(String movieId,@Nullable String userId);

	
	@Meta(allowDiskUse = true)
	@Aggregation(pipeline = {
			"{\r\n"
			+ "        $match: {\r\n"
			+ "            _id: ?1\r\n"
			+ "        }\r\n"
			+ "    }",
			"{\r\n"
			+ "        $project: {\r\n"
			+ "            _id: 1,\r\n"
			+ "            reviewListPage: {\r\n"
			+ "                $slice: [\"$reviewList\", ?2, ?3]\r\n"
			+ "            }\r\n"
			+ "        }\r\n"
			+ "    }",
			"{\r\n"
			+ "        $unwind: {\r\n"
			+ "            path: \"$reviewListPage\",\r\n"
			+ "            preserveNullAndEmptyArrays: true\r\n"
			+ "        }\r\n"
			+ "    }",
			"{\r\n"
			+ "        $lookup: {\r\n"
			+ "            from: \"reviewEntity\",\r\n"
			+ "            let: {\r\n"
			+ "                reviewId: \"$reviewListPage._id\"\r\n"
			+ "            },\r\n"
			+ "            pipeline: [\r\n"
			+ "                {\r\n"
			+ "                    $match: {\r\n"
			+ "                        $expr: {\r\n"
			+ "                            $eq: [\"$_id\", \"$$reviewId\"]\r\n"
			+ "                        }\r\n"
			+ "                    }\r\n"
			+ "                },\r\n"
			+ "                {\r\n"
			+ "                    $project: {\r\n"
			+ "                        _id: 1,\r\n"
			+ "                        timestamp: 1,\r\n"
			+ "                        userId: 1,\r\n"
			+ "                        content: 1,\r\n"
			+ "                        noOfLikes: 1,\r\n"
			+ "                        noOfReplies: 1,\r\n"
			+ "                        userReact: {\r\n"
			+ "                            $cond: {\r\n"
			+ "                                if: {\r\n"
			+ "                                    $eq: [\r\n"
			+ "                                        {\r\n"
			+ "                                            $size: {\r\n"
			+ "                                                $filter: {\r\n"
			+ "                                                    input: \"$likeList\",\r\n"
			+ "                                                    as: \"elem\",\r\n"
			+ "                                                    cond: {\r\n"
			+ "                                                        $eq: [\"$$elem._id\", ?0]\r\n"
			+ "                                                    }\r\n"
			+ "                                                }\r\n"
			+ "                                            }\r\n"
			+ "                                        },\r\n"
			+ "                                        1\r\n"
			+ "                                    ]\r\n"
			+ "                                },\r\n"
			+ "                                then: true,\r\n"
			+ "                                else: false\r\n"
			+ "                            }\r\n"
			+ "                        },\r\n"
			+ "                        replyListPage: {\r\n"
			+ "                            $slice: [\"$replyList\", 0, ?4]\r\n"
			+ "                        }\r\n"
			+ "                    }\r\n"
			+ "                },\r\n"
			+ "                {\r\n"
			+ "                    $unwind: {\r\n"
			+ "                        path: \"$replyListPage\",\r\n"
			+ "                        preserveNullAndEmptyArrays: true\r\n"
			+ "                    }\r\n"
			+ "                },\r\n"
			+ "                {\r\n"
			+ "                    $lookup: {\r\n"
			+ "                        from: \"replyEntity\",\r\n"
			+ "                        let: {\r\n"
			+ "                            replyId: \"$replyListPage._id\"\r\n"
			+ "                        },\r\n"
			+ "                        pipeline: [\r\n"
			+ "                            {\r\n"
			+ "                                $match: {\r\n"
			+ "                                    $expr: {\r\n"
			+ "                                        $eq: [\"$_id\", \"$$replyId\"]\r\n"
			+ "                                    }\r\n"
			+ "                                }\r\n"
			+ "                            },\r\n"
			+ "                            {\r\n"
			+ "                                $set: {\r\n"
			+ "                                    userReact: {\r\n"
			+ "                                        $cond: {\r\n"
			+ "                                            if: {\r\n"
			+ "                                                $eq: [\r\n"
			+ "                                                    {\r\n"
			+ "                                                        $size: {\r\n"
			+ "                                                            $filter: {\r\n"
			+ "                                                                input: \"$likeList\",\r\n"
			+ "                                                                as: \"elem\",\r\n"
			+ "                                                                cond: {\r\n"
			+ "                                                                    $eq: [\"$$elem._id\", ?0]\r\n"
			+ "                                                                }\r\n"
			+ "                                                            }\r\n"
			+ "                                                        }\r\n"
			+ "                                                    },\r\n"
			+ "                                                    1\r\n"
			+ "                                                ]\r\n"
			+ "                                            },\r\n"
			+ "                                            then: true,\r\n"
			+ "                                            else: false\r\n"
			+ "                                        }\r\n"
			+ "                                    }\r\n"
			+ "                                }\r\n"
			+ "                            },\r\n"
			+ "                            {\r\n"
			+ "                                $lookup: {\r\n"
			+ "                                    from: \"userEntity\",\r\n"
			+ "                                    let: {\r\n"
			+ "                                        userId: \"$userId\"\r\n"
			+ "                                    },\r\n"
			+ "                                    pipeline: [\r\n"
			+ "                                        {\r\n"
			+ "                                            $match: {\r\n"
			+ "                                                $expr: {\r\n"
			+ "                                                    $eq: [\"$userId\", \"$$userId\"]\r\n"
			+ "                                                }\r\n"
			+ "                                            }\r\n"
			+ "                                        },\r\n"
			+ "                                        {\r\n"
			+ "                                            $project: {\r\n"
			+ "                                                _id: \"$userId\",\r\n"
			+ "                                                profilePictureLink: 1\r\n"
			+ "                                            }\r\n"
			+ "                                        }\r\n"
			+ "                                    ],\r\n"
			+ "                                    as: \"targetUser\"\r\n"
			+ "                                }\r\n"
			+ "                            },\r\n"
			+ "                            {\r\n"
			+ "                                $project: {\r\n"
			+ "                                    _id: 1,\r\n"
			+ "                                    timestamp: 1,\r\n"
			+ "                                    content: 1,\r\n"
			+ "                                    userObject: {\r\n"
			+ "                                        $first: \"$targetUser\"\r\n"
			+ "                                    },\r\n"
			+ "                                    noOfLikes: 1,\r\n"
			+ "                                    userReact: 1\r\n"
			+ "                                }\r\n"
			+ "                            }\r\n"
			+ "                        ],\r\n"
			+ "                        as: \"target\"\r\n"
			+ "                    }\r\n"
			+ "                },\r\n"
			+ "                {\r\n"
			+ "                    $group: {\r\n"
			+ "                        _id: \"$_id\",\r\n"
			+ "                        timestamp: {\r\n"
			+ "                            $first: \"$timestamp\"\r\n"
			+ "                        },\r\n"
			+ "                        userId: {\r\n"
			+ "                            $first: \"$userId\"\r\n"
			+ "                        },\r\n"
			+ "                        content: {\r\n"
			+ "                            $first: \"$content\"\r\n"
			+ "                        },\r\n"
			+ "                        noOfLikes: {\r\n"
			+ "                            $first: \"$noOfLikes\"\r\n"
			+ "                        },\r\n"
			+ "                        noOfReplies: {\r\n"
			+ "                            $first: \"$noOfReplies\"\r\n"
			+ "                        },\r\n"
			+ "                        userReact: {\r\n"
			+ "                            $first: \"$userReact\"\r\n"
			+ "                        },\r\n"
			+ "                        list: {\r\n"
			+ "                            $push: {\r\n"
			+ "                                $first: \"$target\"\r\n"
			+ "                            }\r\n"
			+ "                        }\r\n"
			+ "                    }\r\n"
			+ "                },\r\n"
			+ "                {\r\n"
			+ "                    $lookup: {\r\n"
			+ "                        from: \"userEntity\",\r\n"
			+ "                        let: {\r\n"
			+ "                            userId: \"$userId\"\r\n"
			+ "                        },\r\n"
			+ "                        pipeline: [\r\n"
			+ "                            {\r\n"
			+ "                                $match: {\r\n"
			+ "                                    $expr: {\r\n"
			+ "                                        $eq: [\"$userId\", \"$$userId\"]\r\n"
			+ "                                    }\r\n"
			+ "                                }\r\n"
			+ "                            },\r\n"
			+ "                            {\r\n"
			+ "                                $project: {\r\n"
			+ "                                    _id: \"$userId\",\r\n"
			+ "                                    profilePictureLink: 1\r\n"
			+ "                                }\r\n"
			+ "                            }\r\n"
			+ "                        ],\r\n"
			+ "                        as: \"targetUser\"\r\n"
			+ "                    }\r\n"
			+ "                },\r\n"
			+ "                {\r\n"
			+ "                    $project: {\r\n"
			+ "                        _id: 1,\r\n"
			+ "                        timestamp: 1,\r\n"
			+ "                        userObject: {\r\n"
			+ "                            $first: \"$targetUser\"\r\n"
			+ "                        },\r\n"
			+ "                        content: 1,\r\n"
			+ "                        noOfLikes: 1,\r\n"
			+ "                        noOfReplies: 1,\r\n"
			+ "                        userReact: 1,\r\n"
			+ "                        replyList: {\r\n"
			+ "                            result: \"$list\"\r\n"
			+ "                        }\r\n"
			+ "                    }\r\n"
			+ "                }\r\n"
			+ "            ],\r\n"
			+ "            as: \"target\"\r\n"
			+ "        }\r\n"
			+ "    }",
			"{\r\n"
			+ "        $group: {\r\n"
			+ "            _id: \"$_id\",\r\n"
			+ "            result: {\r\n"
			+ "                $push: {\r\n"
			+ "                    $first: \"$target\"\r\n"
			+ "                }\r\n"
			+ "            }\r\n"
			+ "        }\r\n"
			+ "    }",
			"{\r\n"
			+ "        $project: {\r\n"
			+ "            _id: 0,\r\n"
			+ "            result: 1\r\n"
			+ "        }\r\n"
			+ "    }"
	})
	ReviewDataFetchResponseBody findReviewList(String userId, String movieId, int index, int length, int size);

	
	
}
